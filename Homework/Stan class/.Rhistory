cat_function <- function(love=TRUE){
if(love==TRUE){
print("I love cats!")
}
else {
print("I am not a cool person.")
}
}
install.packages("devtools")
devtools::install_github("klutometis/roxygen")
devtools::install_github("klutometis/roxygen")
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
install.packages("devtools")
cat_function <- function(love=TRUE){
if(love==TRUE){
print("I love cats!")
}
else {
print("I am not a cool person.")
}
}
setwd("parent_directory")
set wd("./cats")
setwd("./cats")
document()
install.packages("crayon")
setwd("..")
install("cats")
cat_function()
cat_function(cats)
cat_function("cats"")
?cat_function()
??cat_function()
?cat_function
cat_function("cats")
cat_function()
install.packages("ncdf4")
cd
library(ncdf4)
data <- nc_open(file.choose(C:\Users\Faizan\Documents\Academics\Research_Primeau\Data\NPGVel.nc))
library(ncdf4)
data <- nc_open(file.choose(C:\Users\Faizan\Documents\Academics\Research_Primeau\Data\NPGVel.nc))
getwd
getwd
setwd(C:\Users\Faizan\Documents\Academics\Research_Primeau\Data\)
data <- nc_open(file.choose("C:\Users\Faizan\Documents\Academics\Research_Primeau\Data\NPGVel.nc")
setwd("C:\Users\Faizan\Documents\Academics\Research_Primeau\Data\")
NetcdfToNetlogo
NetcdfToNetlogo.R
data <- nc_open(file.choose("C:/Users/Faizan/Documents/Academics/Research_Primeau/Data/NPGVel.nc"))
data
ncvar_get(data,"u") -> uData
image(uData)
image(uData(:,:,1)
image(uData(,,1)
uData
image(uData[,,1])
library(ncdf4)
data <- nc_open(file.choose("C:/Users/Faizan/Documents/Academics/Research_Primeau/Data/NPGVel.nc"))
library(ncdf4)
data <- nc_open(file.choose("C:/Users/Faizan/Documents/Academics/Research_Primeau/Data/NPGVel.nc"))
ncvar_get(data,"u") -> uData
uData2<-as.data.frame(t(uData))
uData2<-as.data.frame(t(uData))
ncvar_get(data,"u") -> uData
uData
uData2<-as.data.frame(uData)
fileCon<-file('uData.asc')
close(fileCon)
write.table(uData2,'uData.asc',append=TRUE,sep=" ",row.names=FALSE,col.names=FALSE)
write.table(uData2,'uData.asc',append=TRUE,sep=" ",row.names=FALSE,col.names=FALSE)
getwd()
ncvar_get(data,"v") -> vData
image(vData[,,1])
data
image(vData[,,2])
image(vData[,,200])
for ( j in 1:10) {image(vData[0,0,j])}
for ( j in 1:2) {image(vData[0,0,j])}
install.packages("rJava")
install.packages("JavaGD") # Optional
install.packages("CommonJavaJars") # Optional
RHOME
R.home()
R.home(component = "home")
system.file("jri", package = "rJava")
u
install.packages("RNetlogo")
phi <- runif(Nt,0,2*pi)
rm(list=ls())
rm(list=ls())
library(colorRamps)
######################################################################
## Figure 1 ##########################################################
######################################################################
tau <- 1
U   <- 0.0
L   <- 1
k   <- 2*pi/L
s   <- 0.001
Nt  <- 2E4
p=q <- 1/3
niter=1000
x0 <- runif(Nt,0,1)
y0 <- runif(Nt,0,1)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
for(i in 2:niter){
d    <- sample(0:2,size=Nt,prob=c(p,q,1-p-q),replace=TRUE)
x    <- rep(N[[i-1]]$x,times=d)
y    <- rep(N[[i-1]]$y,times=d)
cols <- rep(cols,times=d)
Nt   <- length(x)
phi <- runif(Nt,0,2*pi)
x    <- (x + 0.5*U*tau*cos(k*y + phi) + rnorm(Nt,0,s)) %% 1
y    <- (y + 0.5*U*tau*cos(k*x + phi) + rnorm(Nt,0,s)) %% 1
N[[i]] <- list(x=x,y=y,col=cols)
}
ts <- c(1,100,1000)
par(mfrow=c(2,2),mar=c(4,4,2,2))
for(i in 1:length(ts)){
plot(N[[ts[i]]]$x,N[[ts[i]]]$y,col=N[[ts[i]]]$col,cex=0.1,xlim=c(0,1),ylim=c(0,1),xlab='x',ylab='y')
}
plot(unlist(lapply(N,function(x) return(length(x$x)))),type='l')
rm(list=ls())
library(colorRamps)
######################################################################
## Figure 1 ##########################################################
######################################################################
tau <- 1
U   <- 0.0
L   <- 1
k   <- 2*pi/L
s   <- 0.001
Nt  <- 2E4
p=q <- 1/3
niter=1000
x0 <- runif(Nt,0,1)
y0 <- runif(Nt,0,1)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
for(i in 2:niter){
d    <- sample(0:2,size=Nt,prob=c(p,q,1-p-q),replace=TRUE)
x    <- rep(N[[i-1]]$x,times=d)
y    <- rep(N[[i-1]]$y,times=d)
cols <- rep(cols,times=d)
Nt   <- length(x)
phi <- runif(Nt,0,2*pi)
x    <- (x + 0.5*U*tau*cos(k*y + phi) + rnorm(Nt,0,s)) %% 1
y    <- (y + 0.5*U*tau*cos(k*x + phi) + rnorm(Nt,0,s)) %% 1
N[[i]] <- list(x=x,y=y,col=cols)
}
ts <- c(1,100,1000)
par(mfrow=c(2,2),mar=c(4,4,2,2))
for(i in 1:length(ts)){
plot(N[[ts[i]]]$x,N[[ts[i]]]$y,col=N[[ts[i]]]$col,cex=0.1,xlim=c(0,1),ylim=c(0,1),xlab='x',ylab='y')
}
plot(unlist(lapply(N,function(x) return(length(x$x)))),type='l')
brownian_bug
brownian_bug.R
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
install.packages("colorRamps")
library("colorRamps", lib.loc="~/R/win-library/3.3")
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
cols
matlab.like(Nt)
(y0 - min(y0))
diff(range(y0))
range(y0)
cols
rev(matlab.like(Nt))
cols
rev(matlab.like(Nt))
ts <- c(1,100,1000)
length(ts)
Nt  <- 2E4
p=q <- 1/3
niter=1000
x0 <- runif(Nt,0,1)
y0 <- runif(Nt,0,1)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
Nt  <- 2E4
p=q <- 1/3
niter=1000
x0 <- runif(Nt,0,1)
y0 <- runif(Nt,0,1)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
tau <- 1
U   <- 0.0
L   <- 1
k   <- 2*pi/L
s   <- 0.001
Nt  <- 2E4
p=q <- 1/3
niter=1000
x0 <- runif(Nt,0,1)
y0 <- runif(Nt,0,1)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
library(colorRamps)
cols <- rev(matlab.like(Nt))[(y0 - min(y0))/diff(range(y0))*Nt + 1]
N <- list()
N[[1]] <- list(x=x0,y=y0,col=cols)
for(i in 2:niter){
d    <- sample(0:2,size=Nt,prob=c(p,q,1-p-q),replace=TRUE)
x    <- rep(N[[i-1]]$x,times=d)
y    <- rep(N[[i-1]]$y,times=d)
cols <- rep(cols,times=d)
Nt   <- length(x)
phi <- runif(Nt,0,2*pi)
x    <- (x + 0.5*U*tau*cos(k*y + phi) + rnorm(Nt,0,s)) %% 1
y    <- (y + 0.5*U*tau*cos(k*x + phi) + rnorm(Nt,0,s)) %% 1
N[[i]] <- list(x=x,y=y,col=cols)
}
length(d)
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
source('~/Academics/Research_Greg/Code/brownian_bug.R', echo=TRUE)
Nt   <- length(x)
.q
q
q
q()
help
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
R.Version()
Sys.getenv('PATH')
system('g++ -v')
clear
clc
rm(list=ls())
help
install.packages("ncdf4")
library("ncdf4", lib.loc="~/R/win-library/3.3")
fname = 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
t <- ncatt_get( fname, time, attname=NA, verbose=FALSE )
fname = 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc < ncopen(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
fname = 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc < ncopen(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
fname = 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc < nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
library(ncdf4)
setwd('C:/Users/Faizan/Desktop/Winter 2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
library(ncdf4)
setwd('C:/Users/Faizan/Desktop/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncatt_get( nc, time, attname=NA, verbose=FALSE )
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
nc <- nc_open(fname)
t <- ncvar_get( nc, time, attname=NA, verbose=FALSE )
nc_open(fname)
nc_open(fname, write=FALSE)
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, time, attname=NA, verbose=FALSE )
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, time, attname=NA, verbose=FALSE )
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
t <- ncvar_get( myncdf, 'time' )
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
s <- ncvar_get( myncdf, 'sla' )
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
plot(t,s)
plot(t,s)
t(1)
t(1,1)
x = t-15706
x
plot(x,s)
plot(x,s, type = 'l')
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
#tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
#tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
#mydata <- list(N = n, y = y, x=x)
#fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
#            iter = 1000, chains = 4)
#plot(x,y)
#result <- extract(fit)
#hist(result$beta)
#summary(lm(y~x))
length(t)
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
n = length(t)
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
mydata <- list(N = n, y = s, x=tp)
fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
iter = 1000, chains = 1)
#plot(x,y)
result <- extract(fit)
hist(result$beta)
summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
#setwd('C:/Users/Faizan/Documents/Academics/Winter_2018/Sea Level Rise')  #setwd(<wd must contain .stan file>)
setwd('C:\Users\Faizan\Documents\GitHub\Projects\Homework\Stan class')
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
n = length(t)
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
mydata <- list(N = n, y = s, x=tp)
fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
iter = 1000, chains = 1)
#plot(x,y)
result <- extract(fit)
hist(result$beta)
summary(lm(y~x))
library(rstan) #attach Rstan package
#options(mc.cores = parallel::detectCores()) #let Stan use multiple cores
library(ncdf4)
setwd('C:/Users/Faizan/Documents/GitHub/Projects/Homework/Stan class')  #setwd(<wd must contain .stan file>)
#setwd('C:\Users\Faizan\Documents\GitHub\Projects\Homework\Stan class')
fname <- 'global_omi_sl_area_averaged_mean_19930101_P20180220.nc'
myncdf <- nc_open(fname)
t <- ncvar_get( myncdf, 'time' )
tp = t-15706
s <- ncvar_get( myncdf, 'sla' )
n = length(t)
plot(tp,s,type = 'l', xlab= 'days', ylab="Average global mean sea level (m)")
#set.seed(123)
#n <- 100
#x <- seq(0.1, 5, 0.1)
#y <- sin(a)
mydata <- list(N = n, y = s, x=tp)
fit <- stan(file = 'stan_hw_w18.stan', data = mydata,
iter = 1000, chains = 1)
#plot(x,y)
result <- extract(fit)
hist(result$beta)
summary(lm(y~x))
result$beta
summary(lm(s~tp))
a = -4.24e-03
tp = 9.202e-06
c = 9.202e-06
tp = t - 15706
b = a + c*tp
plot(tp,b)
plot(tp,b,'l')
d = s-b
plot(tp,d,'l')
